version: "3.7"
services:
  mongodb:
    container_name: mongo-dev
    image: mongo:4.4
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_DATABASE=auth
      - MONGO_INITDB_ROOT_PASSWORD=123
    # volumes:
    #   - ./mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - test-network

  mongo-express:
    container_name: mongo-express
    image: mongo-express:0.54.0
    restart: always
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=123
      - ME_CONFIG_MONGODB_SERVER=mongo-dev
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=456
    ports:
      - "8081:8081"
    networks:
      - test-network

  rabbitmq:
    image: "rabbitmq:3.8-management-alpine"
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    # volumes:
    #   - "./.rabbitmq_data:/var/lib/rabbitmq/mnesia"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=test123
    networks:
      - test-network

  project_test:
    container_name: project_test
    # DEVELOPER MODE ------ COMMENT TO USE IN PRODUCTION
    build:
      context: .
      dockerfile: Dockerfile
    # DEVELOPER MODE ------ COMMENT TO USE IN PRODUCTION

    # PRODUCTION MODE ----- DISCOMMENT TO USE IN PRODUCTION
    # image: {{url_your_docker_image}}
    # PRODUCTION MODE ----- DISCOMMENT TO USE IN PRODUCTION
    restart: always
    volumes:
      - ./:/var/www/
    # depends_on:
    #   - mongodb
    ports:
      - "9001:9001"
    env_file:
      - ./.env
    networks:
      - test-network

networks:
  test-network:
    driver: bridge
